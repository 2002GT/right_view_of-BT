#include "bits/stdc++.h"
using namespace std;

  struct Node{
      int data;
      struct Node*left;
      struct Node*right;
      
//   CONSTRUCTOR----    
      Node(int val){
      data = val;
      left =NULL;
      right = NULL;
  }

};

int main()
{
    struct Node* root= new Node(1);
    root->left = new Node(2);
    root->right= new Node(3);
    
        
        
      root->left->left = new Node(4)  ;
      root-> right->right = new Node(5);
      
       
        
    return 0;
}
#include "bits/stdc++.h"
using namespace std;

  struct Node{
      int data;
      struct Node*left;
      struct Node*right;
      
//   CONSTRUCTOR----    
      Node(int val){
      data = val;
      left =NULL;
      right = NULL;
  }
};
  
  void right_view(Node* root){
      if(root == NULL){
          return;
      }
      
      queue<Node*>q ;
      q.push(root);
      
      while(!q.empty()){
          int n= q.size();
          for(int i=0; i<n; i++){
              Node*curr = q.front();
              q.pop();
              
           if(i == n-1) {
               cout<<curr->data<<" ";
           }  
           
           if(curr->left != NULL){
               q.push(curr->left);
           }
           if(curr->right != NULL){
               q.push(curr->right);
          }
      }
  }
  


int main()
{
    struct Node* root= new Node(1);
    root->left = new Node(2);
    root->right= new Node(3);
    root->left->left = new Node(4)  ;
    root-> right->right = new Node(5);
      
    right_view(root); 
    return 0;
}
